Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> VAR declarations BEGIN commands END
Rule 2     program -> BEGIN commands END
Rule 3     value -> NUM
Rule 4     value -> identifier
Rule 5     declarations -> declarations COMMA PIDENTIFIER
Rule 6     declarations -> declarations COMMA PIDENTIFIER LB NUM COLON NUM RB
Rule 7     declarations -> PIDENTIFIER
Rule 8     declarations -> PIDENTIFIER LB NUM COLON NUM RB
Rule 9     commands -> commands command
Rule 10    commands -> command
Rule 11    command -> READ identifier SEMICOLON
Rule 12    command -> WRITE value SEMICOLON
Rule 13    command -> identifier ASSIGN expression SEMICOLON
Rule 14    command -> IF condition THEN commands ELSE commands ENDIF
Rule 15    command -> IF condition THEN commands ENDIF
Rule 16    command -> WHILE condition DO commands ENDWHILE
Rule 17    command -> REPEAT commands UNTIL condition SEMICOLON
Rule 18    command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
Rule 19    command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
Rule 20    identifier -> PIDENTIFIER
Rule 21    identifier -> PIDENTIFIER LB PIDENTIFIER RB
Rule 22    identifier -> PIDENTIFIER LB NUM RB
Rule 23    expression -> value
Rule 24    expression -> value PLUS value
Rule 25    expression -> value MINUS value
Rule 26    expression -> value TIMES value
Rule 27    expression -> value DIV value
Rule 28    expression -> value MOD value
Rule 29    condition -> value LE value
Rule 30    condition -> value GE value
Rule 31    condition -> value LEQ value
Rule 32    condition -> value GEQ value
Rule 33    condition -> value EQ value
Rule 34    condition -> value NEQ value

Terminals, with rules where they appear

ASSIGN               : 13
BEGIN                : 1 2
COLON                : 6 8
COMMA                : 5 6
DIV                  : 27
DO                   : 16 18 19
DOWNTO               : 19
ELSE                 : 14
END                  : 1 2
ENDFOR               : 18 19
ENDIF                : 14 15
ENDWHILE             : 16
EQ                   : 33
FOR                  : 18 19
FROM                 : 18 19
GE                   : 30
GEQ                  : 32
IF                   : 14 15
LB                   : 6 8 21 22
LE                   : 29
LEQ                  : 31
MINUS                : 25
MOD                  : 28
NEQ                  : 34
NUM                  : 3 6 6 8 8 22
PIDENTIFIER          : 5 6 7 8 18 19 20 21 21 22
PLUS                 : 24
RB                   : 6 8 21 22
READ                 : 11
REPEAT               : 17
SEMICOLON            : 11 12 13 17
THEN                 : 14 15
TIMES                : 26
TO                   : 18
UNTIL                : 17
VAR                  : 1
WHILE                : 16
WRITE                : 12
error                : 

Nonterminals, with rules where they appear

command              : 9 10
commands             : 1 2 9 14 14 15 16 17 18 19
condition            : 14 15 16 17
declarations         : 1 5 6
expression           : 13
identifier           : 4 11 13
program              : 0
value                : 12 18 18 19 19 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . VAR declarations BEGIN commands END
    (2) program -> . BEGIN commands END

    VAR             shift and go to state 2
    BEGIN           shift and go to state 3

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> VAR . declarations BEGIN commands END
    (5) declarations -> . declarations COMMA PIDENTIFIER
    (6) declarations -> . declarations COMMA PIDENTIFIER LB NUM COLON NUM RB
    (7) declarations -> . PIDENTIFIER
    (8) declarations -> . PIDENTIFIER LB NUM COLON NUM RB

    PIDENTIFIER     shift and go to state 5

    declarations                   shift and go to state 4

state 3

    (2) program -> BEGIN . commands END
    (9) commands -> . commands command
    (10) commands -> . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    commands                       shift and go to state 6
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 4

    (1) program -> VAR declarations . BEGIN commands END
    (5) declarations -> declarations . COMMA PIDENTIFIER
    (6) declarations -> declarations . COMMA PIDENTIFIER LB NUM COLON NUM RB

    BEGIN           shift and go to state 16
    COMMA           shift and go to state 17


state 5

    (7) declarations -> PIDENTIFIER .
    (8) declarations -> PIDENTIFIER . LB NUM COLON NUM RB

    BEGIN           reduce using rule 7 (declarations -> PIDENTIFIER .)
    COMMA           reduce using rule 7 (declarations -> PIDENTIFIER .)
    LB              shift and go to state 18


state 6

    (2) program -> BEGIN commands . END
    (9) commands -> commands . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    END             shift and go to state 19
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    command                        shift and go to state 20
    identifier                     shift and go to state 9

state 7

    (10) commands -> command .

    END             reduce using rule 10 (commands -> command .)
    READ            reduce using rule 10 (commands -> command .)
    WRITE           reduce using rule 10 (commands -> command .)
    IF              reduce using rule 10 (commands -> command .)
    WHILE           reduce using rule 10 (commands -> command .)
    REPEAT          reduce using rule 10 (commands -> command .)
    FOR             reduce using rule 10 (commands -> command .)
    PIDENTIFIER     reduce using rule 10 (commands -> command .)
    UNTIL           reduce using rule 10 (commands -> command .)
    ELSE            reduce using rule 10 (commands -> command .)
    ENDIF           reduce using rule 10 (commands -> command .)
    ENDWHILE        reduce using rule 10 (commands -> command .)
    ENDFOR          reduce using rule 10 (commands -> command .)


state 8

    (11) command -> READ . identifier SEMICOLON
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    PIDENTIFIER     shift and go to state 15

    identifier                     shift and go to state 21

state 9

    (13) command -> identifier . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 22


state 10

    (12) command -> WRITE . value SEMICOLON
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 23
    identifier                     shift and go to state 25

state 11

    (14) command -> IF . condition THEN commands ELSE commands ENDIF
    (15) command -> IF . condition THEN commands ENDIF
    (29) condition -> . value LE value
    (30) condition -> . value GE value
    (31) condition -> . value LEQ value
    (32) condition -> . value GEQ value
    (33) condition -> . value EQ value
    (34) condition -> . value NEQ value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    condition                      shift and go to state 26
    value                          shift and go to state 27
    identifier                     shift and go to state 25

state 12

    (16) command -> WHILE . condition DO commands ENDWHILE
    (29) condition -> . value LE value
    (30) condition -> . value GE value
    (31) condition -> . value LEQ value
    (32) condition -> . value GEQ value
    (33) condition -> . value EQ value
    (34) condition -> . value NEQ value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    condition                      shift and go to state 28
    value                          shift and go to state 27
    identifier                     shift and go to state 25

state 13

    (17) command -> REPEAT . commands UNTIL condition SEMICOLON
    (9) commands -> . commands command
    (10) commands -> . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    commands                       shift and go to state 29
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 14

    (18) command -> FOR . PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> FOR . PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR

    PIDENTIFIER     shift and go to state 30


state 15

    (20) identifier -> PIDENTIFIER .
    (21) identifier -> PIDENTIFIER . LB PIDENTIFIER RB
    (22) identifier -> PIDENTIFIER . LB NUM RB

    ASSIGN          reduce using rule 20 (identifier -> PIDENTIFIER .)
    SEMICOLON       reduce using rule 20 (identifier -> PIDENTIFIER .)
    LE              reduce using rule 20 (identifier -> PIDENTIFIER .)
    GE              reduce using rule 20 (identifier -> PIDENTIFIER .)
    LEQ             reduce using rule 20 (identifier -> PIDENTIFIER .)
    GEQ             reduce using rule 20 (identifier -> PIDENTIFIER .)
    EQ              reduce using rule 20 (identifier -> PIDENTIFIER .)
    NEQ             reduce using rule 20 (identifier -> PIDENTIFIER .)
    PLUS            reduce using rule 20 (identifier -> PIDENTIFIER .)
    MINUS           reduce using rule 20 (identifier -> PIDENTIFIER .)
    TIMES           reduce using rule 20 (identifier -> PIDENTIFIER .)
    DIV             reduce using rule 20 (identifier -> PIDENTIFIER .)
    MOD             reduce using rule 20 (identifier -> PIDENTIFIER .)
    THEN            reduce using rule 20 (identifier -> PIDENTIFIER .)
    DO              reduce using rule 20 (identifier -> PIDENTIFIER .)
    TO              reduce using rule 20 (identifier -> PIDENTIFIER .)
    DOWNTO          reduce using rule 20 (identifier -> PIDENTIFIER .)
    LB              shift and go to state 31


state 16

    (1) program -> VAR declarations BEGIN . commands END
    (9) commands -> . commands command
    (10) commands -> . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    commands                       shift and go to state 32
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 17

    (5) declarations -> declarations COMMA . PIDENTIFIER
    (6) declarations -> declarations COMMA . PIDENTIFIER LB NUM COLON NUM RB

    PIDENTIFIER     shift and go to state 33


state 18

    (8) declarations -> PIDENTIFIER LB . NUM COLON NUM RB

    NUM             shift and go to state 34


state 19

    (2) program -> BEGIN commands END .

    $end            reduce using rule 2 (program -> BEGIN commands END .)


state 20

    (9) commands -> commands command .

    END             reduce using rule 9 (commands -> commands command .)
    READ            reduce using rule 9 (commands -> commands command .)
    WRITE           reduce using rule 9 (commands -> commands command .)
    IF              reduce using rule 9 (commands -> commands command .)
    WHILE           reduce using rule 9 (commands -> commands command .)
    REPEAT          reduce using rule 9 (commands -> commands command .)
    FOR             reduce using rule 9 (commands -> commands command .)
    PIDENTIFIER     reduce using rule 9 (commands -> commands command .)
    UNTIL           reduce using rule 9 (commands -> commands command .)
    ELSE            reduce using rule 9 (commands -> commands command .)
    ENDIF           reduce using rule 9 (commands -> commands command .)
    ENDWHILE        reduce using rule 9 (commands -> commands command .)
    ENDFOR          reduce using rule 9 (commands -> commands command .)


state 21

    (11) command -> READ identifier . SEMICOLON

    SEMICOLON       shift and go to state 35


state 22

    (13) command -> identifier ASSIGN . expression SEMICOLON
    (23) expression -> . value
    (24) expression -> . value PLUS value
    (25) expression -> . value MINUS value
    (26) expression -> . value TIMES value
    (27) expression -> . value DIV value
    (28) expression -> . value MOD value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    identifier                     shift and go to state 25
    expression                     shift and go to state 36
    value                          shift and go to state 37

state 23

    (12) command -> WRITE value . SEMICOLON

    SEMICOLON       shift and go to state 38


state 24

    (3) value -> NUM .

    SEMICOLON       reduce using rule 3 (value -> NUM .)
    LE              reduce using rule 3 (value -> NUM .)
    GE              reduce using rule 3 (value -> NUM .)
    LEQ             reduce using rule 3 (value -> NUM .)
    GEQ             reduce using rule 3 (value -> NUM .)
    EQ              reduce using rule 3 (value -> NUM .)
    NEQ             reduce using rule 3 (value -> NUM .)
    PLUS            reduce using rule 3 (value -> NUM .)
    MINUS           reduce using rule 3 (value -> NUM .)
    TIMES           reduce using rule 3 (value -> NUM .)
    DIV             reduce using rule 3 (value -> NUM .)
    MOD             reduce using rule 3 (value -> NUM .)
    THEN            reduce using rule 3 (value -> NUM .)
    DO              reduce using rule 3 (value -> NUM .)
    TO              reduce using rule 3 (value -> NUM .)
    DOWNTO          reduce using rule 3 (value -> NUM .)


state 25

    (4) value -> identifier .

    SEMICOLON       reduce using rule 4 (value -> identifier .)
    LE              reduce using rule 4 (value -> identifier .)
    GE              reduce using rule 4 (value -> identifier .)
    LEQ             reduce using rule 4 (value -> identifier .)
    GEQ             reduce using rule 4 (value -> identifier .)
    EQ              reduce using rule 4 (value -> identifier .)
    NEQ             reduce using rule 4 (value -> identifier .)
    PLUS            reduce using rule 4 (value -> identifier .)
    MINUS           reduce using rule 4 (value -> identifier .)
    TIMES           reduce using rule 4 (value -> identifier .)
    DIV             reduce using rule 4 (value -> identifier .)
    MOD             reduce using rule 4 (value -> identifier .)
    THEN            reduce using rule 4 (value -> identifier .)
    DO              reduce using rule 4 (value -> identifier .)
    TO              reduce using rule 4 (value -> identifier .)
    DOWNTO          reduce using rule 4 (value -> identifier .)


state 26

    (14) command -> IF condition . THEN commands ELSE commands ENDIF
    (15) command -> IF condition . THEN commands ENDIF

    THEN            shift and go to state 39


state 27

    (29) condition -> value . LE value
    (30) condition -> value . GE value
    (31) condition -> value . LEQ value
    (32) condition -> value . GEQ value
    (33) condition -> value . EQ value
    (34) condition -> value . NEQ value

    LE              shift and go to state 40
    GE              shift and go to state 41
    LEQ             shift and go to state 42
    GEQ             shift and go to state 43
    EQ              shift and go to state 44
    NEQ             shift and go to state 45


state 28

    (16) command -> WHILE condition . DO commands ENDWHILE

    DO              shift and go to state 46


state 29

    (17) command -> REPEAT commands . UNTIL condition SEMICOLON
    (9) commands -> commands . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    UNTIL           shift and go to state 47
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    command                        shift and go to state 20
    identifier                     shift and go to state 9

state 30

    (18) command -> FOR PIDENTIFIER . FROM value TO value DO commands ENDFOR
    (19) command -> FOR PIDENTIFIER . FROM value DOWNTO value DO commands ENDFOR

    FROM            shift and go to state 48


state 31

    (21) identifier -> PIDENTIFIER LB . PIDENTIFIER RB
    (22) identifier -> PIDENTIFIER LB . NUM RB

    PIDENTIFIER     shift and go to state 49
    NUM             shift and go to state 50


state 32

    (1) program -> VAR declarations BEGIN commands . END
    (9) commands -> commands . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    END             shift and go to state 51
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    command                        shift and go to state 20
    identifier                     shift and go to state 9

state 33

    (5) declarations -> declarations COMMA PIDENTIFIER .
    (6) declarations -> declarations COMMA PIDENTIFIER . LB NUM COLON NUM RB

    BEGIN           reduce using rule 5 (declarations -> declarations COMMA PIDENTIFIER .)
    COMMA           reduce using rule 5 (declarations -> declarations COMMA PIDENTIFIER .)
    LB              shift and go to state 52


state 34

    (8) declarations -> PIDENTIFIER LB NUM . COLON NUM RB

    COLON           shift and go to state 53


state 35

    (11) command -> READ identifier SEMICOLON .

    END             reduce using rule 11 (command -> READ identifier SEMICOLON .)
    READ            reduce using rule 11 (command -> READ identifier SEMICOLON .)
    WRITE           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    IF              reduce using rule 11 (command -> READ identifier SEMICOLON .)
    WHILE           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    REPEAT          reduce using rule 11 (command -> READ identifier SEMICOLON .)
    FOR             reduce using rule 11 (command -> READ identifier SEMICOLON .)
    PIDENTIFIER     reduce using rule 11 (command -> READ identifier SEMICOLON .)
    UNTIL           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ELSE            reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ENDIF           reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ENDWHILE        reduce using rule 11 (command -> READ identifier SEMICOLON .)
    ENDFOR          reduce using rule 11 (command -> READ identifier SEMICOLON .)


state 36

    (13) command -> identifier ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 54


state 37

    (23) expression -> value .
    (24) expression -> value . PLUS value
    (25) expression -> value . MINUS value
    (26) expression -> value . TIMES value
    (27) expression -> value . DIV value
    (28) expression -> value . MOD value

    SEMICOLON       reduce using rule 23 (expression -> value .)
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIV             shift and go to state 58
    MOD             shift and go to state 59


state 38

    (12) command -> WRITE value SEMICOLON .

    END             reduce using rule 12 (command -> WRITE value SEMICOLON .)
    READ            reduce using rule 12 (command -> WRITE value SEMICOLON .)
    WRITE           reduce using rule 12 (command -> WRITE value SEMICOLON .)
    IF              reduce using rule 12 (command -> WRITE value SEMICOLON .)
    WHILE           reduce using rule 12 (command -> WRITE value SEMICOLON .)
    REPEAT          reduce using rule 12 (command -> WRITE value SEMICOLON .)
    FOR             reduce using rule 12 (command -> WRITE value SEMICOLON .)
    PIDENTIFIER     reduce using rule 12 (command -> WRITE value SEMICOLON .)
    UNTIL           reduce using rule 12 (command -> WRITE value SEMICOLON .)
    ELSE            reduce using rule 12 (command -> WRITE value SEMICOLON .)
    ENDIF           reduce using rule 12 (command -> WRITE value SEMICOLON .)
    ENDWHILE        reduce using rule 12 (command -> WRITE value SEMICOLON .)
    ENDFOR          reduce using rule 12 (command -> WRITE value SEMICOLON .)


state 39

    (14) command -> IF condition THEN . commands ELSE commands ENDIF
    (15) command -> IF condition THEN . commands ENDIF
    (9) commands -> . commands command
    (10) commands -> . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    commands                       shift and go to state 60
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 40

    (29) condition -> value LE . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 61
    identifier                     shift and go to state 25

state 41

    (30) condition -> value GE . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 62
    identifier                     shift and go to state 25

state 42

    (31) condition -> value LEQ . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 63
    identifier                     shift and go to state 25

state 43

    (32) condition -> value GEQ . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 64
    identifier                     shift and go to state 25

state 44

    (33) condition -> value EQ . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 65
    identifier                     shift and go to state 25

state 45

    (34) condition -> value NEQ . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 66
    identifier                     shift and go to state 25

state 46

    (16) command -> WHILE condition DO . commands ENDWHILE
    (9) commands -> . commands command
    (10) commands -> . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    commands                       shift and go to state 67
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 47

    (17) command -> REPEAT commands UNTIL . condition SEMICOLON
    (29) condition -> . value LE value
    (30) condition -> . value GE value
    (31) condition -> . value LEQ value
    (32) condition -> . value GEQ value
    (33) condition -> . value EQ value
    (34) condition -> . value NEQ value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    condition                      shift and go to state 68
    value                          shift and go to state 27
    identifier                     shift and go to state 25

state 48

    (18) command -> FOR PIDENTIFIER FROM . value TO value DO commands ENDFOR
    (19) command -> FOR PIDENTIFIER FROM . value DOWNTO value DO commands ENDFOR
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 69
    identifier                     shift and go to state 25

state 49

    (21) identifier -> PIDENTIFIER LB PIDENTIFIER . RB

    RB              shift and go to state 70


state 50

    (22) identifier -> PIDENTIFIER LB NUM . RB

    RB              shift and go to state 71


state 51

    (1) program -> VAR declarations BEGIN commands END .

    $end            reduce using rule 1 (program -> VAR declarations BEGIN commands END .)


state 52

    (6) declarations -> declarations COMMA PIDENTIFIER LB . NUM COLON NUM RB

    NUM             shift and go to state 72


state 53

    (8) declarations -> PIDENTIFIER LB NUM COLON . NUM RB

    NUM             shift and go to state 73


state 54

    (13) command -> identifier ASSIGN expression SEMICOLON .

    END             reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    READ            reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    IF              reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    REPEAT          reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    PIDENTIFIER     reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    UNTIL           reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDIF           reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDWHILE        reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDFOR          reduce using rule 13 (command -> identifier ASSIGN expression SEMICOLON .)


state 55

    (24) expression -> value PLUS . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 74
    identifier                     shift and go to state 25

state 56

    (25) expression -> value MINUS . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 75
    identifier                     shift and go to state 25

state 57

    (26) expression -> value TIMES . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 76
    identifier                     shift and go to state 25

state 58

    (27) expression -> value DIV . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 77
    identifier                     shift and go to state 25

state 59

    (28) expression -> value MOD . value
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 78
    identifier                     shift and go to state 25

state 60

    (14) command -> IF condition THEN commands . ELSE commands ENDIF
    (15) command -> IF condition THEN commands . ENDIF
    (9) commands -> commands . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    ELSE            shift and go to state 79
    ENDIF           shift and go to state 80
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    command                        shift and go to state 20
    identifier                     shift and go to state 9

state 61

    (29) condition -> value LE value .

    THEN            reduce using rule 29 (condition -> value LE value .)
    DO              reduce using rule 29 (condition -> value LE value .)
    SEMICOLON       reduce using rule 29 (condition -> value LE value .)


state 62

    (30) condition -> value GE value .

    THEN            reduce using rule 30 (condition -> value GE value .)
    DO              reduce using rule 30 (condition -> value GE value .)
    SEMICOLON       reduce using rule 30 (condition -> value GE value .)


state 63

    (31) condition -> value LEQ value .

    THEN            reduce using rule 31 (condition -> value LEQ value .)
    DO              reduce using rule 31 (condition -> value LEQ value .)
    SEMICOLON       reduce using rule 31 (condition -> value LEQ value .)


state 64

    (32) condition -> value GEQ value .

    THEN            reduce using rule 32 (condition -> value GEQ value .)
    DO              reduce using rule 32 (condition -> value GEQ value .)
    SEMICOLON       reduce using rule 32 (condition -> value GEQ value .)


state 65

    (33) condition -> value EQ value .

    THEN            reduce using rule 33 (condition -> value EQ value .)
    DO              reduce using rule 33 (condition -> value EQ value .)
    SEMICOLON       reduce using rule 33 (condition -> value EQ value .)


state 66

    (34) condition -> value NEQ value .

    THEN            reduce using rule 34 (condition -> value NEQ value .)
    DO              reduce using rule 34 (condition -> value NEQ value .)
    SEMICOLON       reduce using rule 34 (condition -> value NEQ value .)


state 67

    (16) command -> WHILE condition DO commands . ENDWHILE
    (9) commands -> commands . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    ENDWHILE        shift and go to state 81
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    command                        shift and go to state 20
    identifier                     shift and go to state 9

state 68

    (17) command -> REPEAT commands UNTIL condition . SEMICOLON

    SEMICOLON       shift and go to state 82


state 69

    (18) command -> FOR PIDENTIFIER FROM value . TO value DO commands ENDFOR
    (19) command -> FOR PIDENTIFIER FROM value . DOWNTO value DO commands ENDFOR

    TO              shift and go to state 83
    DOWNTO          shift and go to state 84


state 70

    (21) identifier -> PIDENTIFIER LB PIDENTIFIER RB .

    ASSIGN          reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    SEMICOLON       reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    LE              reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    GE              reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    LEQ             reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    GEQ             reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    EQ              reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    NEQ             reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    PLUS            reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    MINUS           reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    TIMES           reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    DIV             reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    MOD             reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    THEN            reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    DO              reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    TO              reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)
    DOWNTO          reduce using rule 21 (identifier -> PIDENTIFIER LB PIDENTIFIER RB .)


state 71

    (22) identifier -> PIDENTIFIER LB NUM RB .

    ASSIGN          reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    SEMICOLON       reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    LE              reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    GE              reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    LEQ             reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    GEQ             reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    EQ              reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    NEQ             reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    PLUS            reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    MINUS           reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    TIMES           reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    DIV             reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    MOD             reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    THEN            reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    DO              reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    TO              reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)
    DOWNTO          reduce using rule 22 (identifier -> PIDENTIFIER LB NUM RB .)


state 72

    (6) declarations -> declarations COMMA PIDENTIFIER LB NUM . COLON NUM RB

    COLON           shift and go to state 85


state 73

    (8) declarations -> PIDENTIFIER LB NUM COLON NUM . RB

    RB              shift and go to state 86


state 74

    (24) expression -> value PLUS value .

    SEMICOLON       reduce using rule 24 (expression -> value PLUS value .)


state 75

    (25) expression -> value MINUS value .

    SEMICOLON       reduce using rule 25 (expression -> value MINUS value .)


state 76

    (26) expression -> value TIMES value .

    SEMICOLON       reduce using rule 26 (expression -> value TIMES value .)


state 77

    (27) expression -> value DIV value .

    SEMICOLON       reduce using rule 27 (expression -> value DIV value .)


state 78

    (28) expression -> value MOD value .

    SEMICOLON       reduce using rule 28 (expression -> value MOD value .)


state 79

    (14) command -> IF condition THEN commands ELSE . commands ENDIF
    (9) commands -> . commands command
    (10) commands -> . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    commands                       shift and go to state 87
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 80

    (15) command -> IF condition THEN commands ENDIF .

    END             reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    READ            reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    WRITE           reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    IF              reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    WHILE           reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    REPEAT          reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    FOR             reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    PIDENTIFIER     reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    UNTIL           reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    ELSE            reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    ENDIF           reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    ENDWHILE        reduce using rule 15 (command -> IF condition THEN commands ENDIF .)
    ENDFOR          reduce using rule 15 (command -> IF condition THEN commands ENDIF .)


state 81

    (16) command -> WHILE condition DO commands ENDWHILE .

    END             reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    READ            reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    WRITE           reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    IF              reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    WHILE           reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    REPEAT          reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    FOR             reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    PIDENTIFIER     reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    UNTIL           reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    ELSE            reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    ENDIF           reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    ENDWHILE        reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)
    ENDFOR          reduce using rule 16 (command -> WHILE condition DO commands ENDWHILE .)


state 82

    (17) command -> REPEAT commands UNTIL condition SEMICOLON .

    END             reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    READ            reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    WRITE           reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    IF              reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    WHILE           reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    REPEAT          reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    FOR             reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    PIDENTIFIER     reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    UNTIL           reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    ELSE            reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    ENDIF           reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    ENDWHILE        reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)
    ENDFOR          reduce using rule 17 (command -> REPEAT commands UNTIL condition SEMICOLON .)


state 83

    (18) command -> FOR PIDENTIFIER FROM value TO . value DO commands ENDFOR
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 88
    identifier                     shift and go to state 25

state 84

    (19) command -> FOR PIDENTIFIER FROM value DOWNTO . value DO commands ENDFOR
    (3) value -> . NUM
    (4) value -> . identifier
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    NUM             shift and go to state 24
    PIDENTIFIER     shift and go to state 15

    value                          shift and go to state 89
    identifier                     shift and go to state 25

state 85

    (6) declarations -> declarations COMMA PIDENTIFIER LB NUM COLON . NUM RB

    NUM             shift and go to state 90


state 86

    (8) declarations -> PIDENTIFIER LB NUM COLON NUM RB .

    BEGIN           reduce using rule 8 (declarations -> PIDENTIFIER LB NUM COLON NUM RB .)
    COMMA           reduce using rule 8 (declarations -> PIDENTIFIER LB NUM COLON NUM RB .)


state 87

    (14) command -> IF condition THEN commands ELSE commands . ENDIF
    (9) commands -> commands . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    ENDIF           shift and go to state 91
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    command                        shift and go to state 20
    identifier                     shift and go to state 9

state 88

    (18) command -> FOR PIDENTIFIER FROM value TO value . DO commands ENDFOR

    DO              shift and go to state 92


state 89

    (19) command -> FOR PIDENTIFIER FROM value DOWNTO value . DO commands ENDFOR

    DO              shift and go to state 93


state 90

    (6) declarations -> declarations COMMA PIDENTIFIER LB NUM COLON NUM . RB

    RB              shift and go to state 94


state 91

    (14) command -> IF condition THEN commands ELSE commands ENDIF .

    END             reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    READ            reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WRITE           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    IF              reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WHILE           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    REPEAT          reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    FOR             reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    PIDENTIFIER     reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    UNTIL           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ELSE            reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDIF           reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDWHILE        reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDFOR          reduce using rule 14 (command -> IF condition THEN commands ELSE commands ENDIF .)


state 92

    (18) command -> FOR PIDENTIFIER FROM value TO value DO . commands ENDFOR
    (9) commands -> . commands command
    (10) commands -> . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    commands                       shift and go to state 95
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 93

    (19) command -> FOR PIDENTIFIER FROM value DOWNTO value DO . commands ENDFOR
    (9) commands -> . commands command
    (10) commands -> . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    commands                       shift and go to state 96
    command                        shift and go to state 7
    identifier                     shift and go to state 9

state 94

    (6) declarations -> declarations COMMA PIDENTIFIER LB NUM COLON NUM RB .

    BEGIN           reduce using rule 6 (declarations -> declarations COMMA PIDENTIFIER LB NUM COLON NUM RB .)
    COMMA           reduce using rule 6 (declarations -> declarations COMMA PIDENTIFIER LB NUM COLON NUM RB .)


state 95

    (18) command -> FOR PIDENTIFIER FROM value TO value DO commands . ENDFOR
    (9) commands -> commands . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    ENDFOR          shift and go to state 97
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    command                        shift and go to state 20
    identifier                     shift and go to state 9

state 96

    (19) command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands . ENDFOR
    (9) commands -> commands . command
    (11) command -> . READ identifier SEMICOLON
    (12) command -> . WRITE value SEMICOLON
    (13) command -> . identifier ASSIGN expression SEMICOLON
    (14) command -> . IF condition THEN commands ELSE commands ENDIF
    (15) command -> . IF condition THEN commands ENDIF
    (16) command -> . WHILE condition DO commands ENDWHILE
    (17) command -> . REPEAT commands UNTIL condition SEMICOLON
    (18) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (19) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (20) identifier -> . PIDENTIFIER
    (21) identifier -> . PIDENTIFIER LB PIDENTIFIER RB
    (22) identifier -> . PIDENTIFIER LB NUM RB

    ENDFOR          shift and go to state 98
    READ            shift and go to state 8
    WRITE           shift and go to state 10
    IF              shift and go to state 11
    WHILE           shift and go to state 12
    REPEAT          shift and go to state 13
    FOR             shift and go to state 14
    PIDENTIFIER     shift and go to state 15

    command                        shift and go to state 20
    identifier                     shift and go to state 9

state 97

    (18) command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .

    END             reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    READ            reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    WRITE           reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    IF              reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    WHILE           reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    REPEAT          reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    FOR             reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    PIDENTIFIER     reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    UNTIL           reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ELSE            reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDIF           reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDWHILE        reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDFOR          reduce using rule 18 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)


state 98

    (19) command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .

    END             reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    READ            reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    WRITE           reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    IF              reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    WHILE           reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    REPEAT          reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    FOR             reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    PIDENTIFIER     reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    UNTIL           reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ELSE            reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDIF           reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDWHILE        reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDFOR          reduce using rule 19 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)

